{"version":3,"file":"fusioncharts.pipe.js","sources":["../../src/angular-fusioncharts/src/fusioncharts.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,UAAE,EAA0B,IAAA,EAAK,MAAM,eAAA,CAAgB;AAE9D;AACA;AACA,GAAG;;AAGH;AAAoD,IAApD;AAA8B,IAa9B,CAAC;AACD,IAbE,oCAAS,GAAT,UAAU,KAAU,EAAE,IAAY;AAAI,QACpC,OAAO,KAAK,CAAC;AACjB,IAAE,CAAC,CAMD;IALK,JAMP,IAAA,kBAAkB;QAND,GAA0B,UAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,sBACnB,hEAKF,IAAO,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F;EANK,EAAE,kBAAkB,kBACzB,EAAG,EAAE,UACN,EAAE,IAAI,EAAE,UAAU,EAAE,OACnB;;;;;;;;;;gDAGC;AACF,IAAA,uBAAC;AAED,CAfA,AAaC,IAAA;AACD,SAda,gBAAgB;AAAI","sourcesContent":["import {Injectable, PipeTransform, Pipe} from '@angular/core';\n\n/**\n * Transforms any input value\n */\n\n\nexport class FusionChartsPipe implements PipeTransform {\n  transform(value: any, args?: any[]): string {\n    return value;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'fusionchartsPipe'\n}, ] },\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}