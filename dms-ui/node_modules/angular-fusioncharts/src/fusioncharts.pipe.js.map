{"version":3,"sources":["../../src/angular-fusioncharts/src/fusioncharts.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,UAAE,EAA0B,IAAA,EAAK,MAAM,eAAA,CAAgB;AAE9D;;GAEG;AAGH;IAAA;IAaA,CAAC;IAZC,oCAAS,GAAT,UAAU,KAAU,EAAE,IAAY;QAChC,OAAO,KAAK,CAAC;IACf,CAAC;IACI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACnB,IAAI,EAAE,kBAAkB;iBACzB,EAAG,EAAE;QACN,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,uBAAC;CAbD,AAaC,IAAA;SAbY,gBAAgB","file":"fusioncharts.pipe.js","sourceRoot":"","sourcesContent":["import {Injectable, PipeTransform, Pipe} from '@angular/core';\n\n/**\n * Transforms any input value\n */\n\n\nexport class FusionChartsPipe implements PipeTransform {\n  transform(value: any, args?: any[]): string {\n    return value;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'fusionchartsPipe'\n}, ] },\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}