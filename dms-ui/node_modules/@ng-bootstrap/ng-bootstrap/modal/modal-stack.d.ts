import { ApplicationRef, ComponentFactoryResolver, EventEmitter, Injector, NgZone, RendererFactory2 } from '@angular/core';
import { ScrollBar } from '../util/scrollbar';
import { NgbModalRef } from './modal-ref';
import * as ɵngcc0 from '@angular/core';
export declare class NgbModalStack {
    private _applicationRef;
    private _injector;
    private _document;
    private _scrollBar;
    private _rendererFactory;
    private _ngZone;
    private _activeWindowCmptHasChanged;
    private _ariaHiddenValues;
    private _backdropAttributes;
    private _modalRefs;
    private _windowAttributes;
    private _windowCmpts;
    private _activeInstances;
    constructor(_applicationRef: ApplicationRef, _injector: Injector, _document: any, _scrollBar: ScrollBar, _rendererFactory: RendererFactory2, _ngZone: NgZone);
    open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options: any): NgbModalRef;
    get activeInstances(): EventEmitter<NgbModalRef[]>;
    dismissAll(reason?: any): void;
    hasOpenModals(): boolean;
    private _attachBackdrop;
    private _attachWindowComponent;
    private _applyWindowOptions;
    private _applyBackdropOptions;
    private _getContentRef;
    private _createFromTemplateRef;
    private _createFromString;
    private _createFromComponent;
    private _setAriaHidden;
    private _revertAriaHidden;
    private _registerModalRef;
    private _registerWindowCmpt;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgbModalStack, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtc3RhY2suZC50cyIsInNvdXJjZXMiOlsibW9kYWwtc3RhY2suZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBsaWNhdGlvblJlZiwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBFdmVudEVtaXR0ZXIsIEluamVjdG9yLCBOZ1pvbmUsIFJlbmRlcmVyRmFjdG9yeTIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNjcm9sbEJhciB9IGZyb20gJy4uL3V0aWwvc2Nyb2xsYmFyJztcbmltcG9ydCB7IE5nYk1vZGFsUmVmIH0gZnJvbSAnLi9tb2RhbC1yZWYnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmdiTW9kYWxTdGFjayB7XG4gICAgcHJpdmF0ZSBfYXBwbGljYXRpb25SZWY7XG4gICAgcHJpdmF0ZSBfaW5qZWN0b3I7XG4gICAgcHJpdmF0ZSBfZG9jdW1lbnQ7XG4gICAgcHJpdmF0ZSBfc2Nyb2xsQmFyO1xuICAgIHByaXZhdGUgX3JlbmRlcmVyRmFjdG9yeTtcbiAgICBwcml2YXRlIF9uZ1pvbmU7XG4gICAgcHJpdmF0ZSBfYWN0aXZlV2luZG93Q21wdEhhc0NoYW5nZWQ7XG4gICAgcHJpdmF0ZSBfYXJpYUhpZGRlblZhbHVlcztcbiAgICBwcml2YXRlIF9iYWNrZHJvcEF0dHJpYnV0ZXM7XG4gICAgcHJpdmF0ZSBfbW9kYWxSZWZzO1xuICAgIHByaXZhdGUgX3dpbmRvd0F0dHJpYnV0ZXM7XG4gICAgcHJpdmF0ZSBfd2luZG93Q21wdHM7XG4gICAgcHJpdmF0ZSBfYWN0aXZlSW5zdGFuY2VzO1xuICAgIGNvbnN0cnVjdG9yKF9hcHBsaWNhdGlvblJlZjogQXBwbGljYXRpb25SZWYsIF9pbmplY3RvcjogSW5qZWN0b3IsIF9kb2N1bWVudDogYW55LCBfc2Nyb2xsQmFyOiBTY3JvbGxCYXIsIF9yZW5kZXJlckZhY3Rvcnk6IFJlbmRlcmVyRmFjdG9yeTIsIF9uZ1pvbmU6IE5nWm9uZSk7XG4gICAgb3Blbihtb2R1bGVDRlI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgY29udGVudEluamVjdG9yOiBJbmplY3RvciwgY29udGVudDogYW55LCBvcHRpb25zOiBhbnkpOiBOZ2JNb2RhbFJlZjtcbiAgICBnZXQgYWN0aXZlSW5zdGFuY2VzKCk6IEV2ZW50RW1pdHRlcjxOZ2JNb2RhbFJlZltdPjtcbiAgICBkaXNtaXNzQWxsKHJlYXNvbj86IGFueSk6IHZvaWQ7XG4gICAgaGFzT3Blbk1vZGFscygpOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2F0dGFjaEJhY2tkcm9wO1xuICAgIHByaXZhdGUgX2F0dGFjaFdpbmRvd0NvbXBvbmVudDtcbiAgICBwcml2YXRlIF9hcHBseVdpbmRvd09wdGlvbnM7XG4gICAgcHJpdmF0ZSBfYXBwbHlCYWNrZHJvcE9wdGlvbnM7XG4gICAgcHJpdmF0ZSBfZ2V0Q29udGVudFJlZjtcbiAgICBwcml2YXRlIF9jcmVhdGVGcm9tVGVtcGxhdGVSZWY7XG4gICAgcHJpdmF0ZSBfY3JlYXRlRnJvbVN0cmluZztcbiAgICBwcml2YXRlIF9jcmVhdGVGcm9tQ29tcG9uZW50O1xuICAgIHByaXZhdGUgX3NldEFyaWFIaWRkZW47XG4gICAgcHJpdmF0ZSBfcmV2ZXJ0QXJpYUhpZGRlbjtcbiAgICBwcml2YXRlIF9yZWdpc3Rlck1vZGFsUmVmO1xuICAgIHByaXZhdGUgX3JlZ2lzdGVyV2luZG93Q21wdDtcbn1cbiJdfQ==